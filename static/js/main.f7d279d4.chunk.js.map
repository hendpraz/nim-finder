{"version":3,"sources":["logo.svg","components/Welcome/Welcome.js","services/PostData.js","components/Login/Login.js","components/Register/Register.js","services/GetData.js","components/Home/Table.js","components/Home/Home.js","components/NotFound/NotFound.js","routes.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Welcome","props","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","sessionStorage","getItem","react_default","a","createElement","react_router","to","state","log","reg","className","align","src","logo","alt","href","Component","PostData","type","userData","formBody","property","encodedKey","encodeURIComponent","encodedValue","push","join","Promise","resolve","reject","fetch","method","headers","Content-Type","body","then","response","json","responseJson","catch","error","Login","_this","onChange","event","preventDefault","setState","defineProperty","target","name","value","username","password","redirectToRefererrer","login","bind","assertThisInitialized","redirectToReferrer","_this2","result","code","setItem","JSON","stringify","token","alert","myString","onSubmit","placeholder","maxLength","Register","register","GetData","queryURL","authToken","newToken","slice","length","Headers","Auth-Token","Table","generateTableHead","generateTable","tableCreate","table","row","createTHead","insertRow","key","i","th","document","text","createTextNode","appendChild","cols","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","element","cell","insertCell","err","return","querySelector","keys","data","id","Home","clearTable","console","onSearch","query","pageNum","toggleHide","getElementById","innerHTML","ord","charCodeAt","status","payload","parse","JSONData","temp","toString","currQuery","toggleShow","nextPage","logout","parent","hasChildNodes","removeChild","firstChild","style","display","clear","background-color","onClick","Home_Table","NotFound","Routes","react_router_dom","path","component","App","appName","home","routes","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f7d279d4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react';\r\nimport logo from '../../logo.svg';\r\nimport './Welcome.css';\r\nimport {Redirect} from 'react-router-dom'\r\n\r\nclass Welcome extends Component {\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n\r\n    render(){\r\n        if (sessionStorage.getItem('authToken')) {\r\n            return (<Redirect to={'/home'}/>);\r\n        } else if(this.state.log){\r\n            return (<Redirect to={'/login'}/>);\r\n        } else if(this.state.reg){\r\n            return (<Redirect to={'/register'}/>);\r\n        }\r\n        return (\r\n        <div className=\"App\">\r\n            <header className=\"App-header\">\r\n                <h2 align=\"center\">ITB NIM Finder - Hendpraz</h2>\r\n                <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n                <a href=\"/nim-finder/#/login\" className=\"button1\">Login</a>\r\n                <a href=\"/nim-finder/#/register\" className=\"button2\">Register</a>\r\n            </header>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Welcome;","export function PostData(type, userData){\r\n    var BaseURL = 'https://api.stya.net/nim/';\r\n    \r\n    //Create body from username and password\r\n    var formBody = [];\r\n    for (var property in userData) {\r\n      var encodedKey = encodeURIComponent(property);\r\n      var encodedValue = encodeURIComponent(userData[property]);\r\n      formBody.push(encodedKey + \"=\" + encodedValue);\r\n    }\r\n    formBody = formBody.join(\"&\");\r\n\r\n    //Fetch API\r\n    return new Promise((resolve, reject) =>{\r\n        fetch(BaseURL+type, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8'\r\n            },\r\n            body: formBody\r\n        })\r\n        .then((response) => response.json())\r\n        .then((responseJson) => {\r\n            resolve(responseJson);\r\n        })\r\n        .catch((error) => {\r\n            reject(error);\r\n        });\r\n      });\r\n}","import React, { Component } from 'react';\r\nimport {Redirect} from 'react-router-dom'\r\nimport {PostData} from '../../services/PostData'\r\nimport logo from '../../logo.svg';\r\nimport './Login.css';\r\n\r\nclass Login extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            username: \"\",\r\n            password: \"\",\r\n            redirectToRefererrer: false\r\n        }\r\n        this.login = this.login.bind(this);\r\n        this.onChange = this.onChange.bind(this);\r\n    }\r\n\r\n    // Lifecycle\r\n    componentWillMount(){\r\n        if(sessionStorage.getItem(\"authToken\")){\r\n            this.setState({redirectToReferrer: true});\r\n        }\r\n    }\r\n\r\n    //Set value of username and password\r\n    onChange = (event) =>{\r\n        event.preventDefault();\r\n        this.setState({\r\n            [event.target.name] : event.target.value\r\n        })\r\n    }\r\n\r\n    login(){\r\n        var userData = {\r\n            username: this.state.username,\r\n            password: this.state.password\r\n        }\r\n        PostData('login', userData).then((result) =>{\r\n            if(result.code === 0){\r\n                sessionStorage.setItem('authToken',JSON.stringify(result.token));\r\n                this.setState({\r\n                    redirectToRefererrer: true}\r\n                );\r\n            } else{\r\n                alert(\"Something wrong!\");\r\n                let myString = JSON.stringify(result);\r\n                alert(myString);\r\n            }\r\n        });\r\n    }\r\n\r\n    render(){\r\n        if ((sessionStorage.getItem('authToken')) || (this.state.redirectToReferrer)) {\r\n            return (<Redirect to={'/home'}/>)\r\n        }\r\n\r\n        return (\r\n        <div className=\"App\">\r\n            <header className=\"Login-header\">\r\n                <h1 align=\"center\">ITB NIM Finder</h1>\r\n                <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n                <form onSubmit = {this.login}>\r\n                    <input \r\n                        name=\"username\"\r\n                        placeholder=\"Enter username...\"\r\n                        type=\"text\"\r\n                        maxLength = \"20\"\r\n                        onChange={this.onChange}\r\n                    />\r\n                    <input\r\n                        name=\"password\"\r\n                        placeholder=\"Enter password...\"\r\n                        type=\"password\"\r\n                        onChange={this.onChange}\r\n                    />\r\n                    <br />\r\n                    <input type=\"submit\" value=\"Login\"/>\r\n                </form>\r\n                <p align=\"center\">\r\n                    Masukkan username dan password.<br />\r\n                    Belum daftar? <a href=\"/nim-finder/#/register\" className=\"App-link\">Daftar di sini</a>\r\n                </p>\r\n            </header>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Login;","import React, { Component } from 'react';\r\nimport logo from '../../logo.svg';\r\nimport {Redirect} from 'react-router-dom'\r\nimport {PostData} from '../../services/PostData'\r\nimport './Register.css';\r\n\r\nclass Register extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            username: \"\",\r\n            password: \"\",\r\n            redirectToReferrer: false\r\n        }\r\n        this.register = this.register.bind(this);\r\n        this.onChange = this.onChange.bind(this);\r\n    }\r\n\r\n    // Lifecycle\r\n    componentWillMount(){\r\n        if(sessionStorage.getItem(\"authToken\")){\r\n            this.setState({redirectToReferrer: true});\r\n        }\r\n    }\r\n\r\n    //Set value of username and password\r\n    onChange = (event) =>{\r\n        event.preventDefault();\r\n        this.setState({\r\n            [event.target.name] : event.target.value\r\n        })\r\n    }\r\n\r\n    register(){\r\n        var userData = {\r\n            username: this.state.username,\r\n            password: this.state.password\r\n        }\r\n        PostData('register', userData).then((result) =>{\r\n            if(result.code === 0){\r\n                alert(\"Registration success!\");\r\n            } else if(result.code === -4){\r\n                alert(\"Username already taken!\");\r\n            } else{\r\n                alert(\"Something went wrong!\");\r\n                let myString = JSON.stringify(result);\r\n                alert(myString);\r\n            }\r\n        })\r\n    }\r\n\r\n    render(){\r\n        if ((sessionStorage.getItem('authToken')) || (this.state.redirectToReferrer)) {\r\n            return (<Redirect to={'/home'}/>);\r\n        }\r\n        return (\r\n        <div className=\"App\">\r\n            <header className=\"App-header\">\r\n                <h2 align=\"center\">ITB NIM Finder</h2>\r\n                <h1 align=\"center\">REGISTER</h1>\r\n                <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n                <form onSubmit = {this.register}>\r\n                    <input \r\n                        name=\"username\"\r\n                        placeholder=\"Enter new username...\"\r\n                        type=\"text\"\r\n                        maxLength = \"20\"\r\n                        onChange={this.onChange}\r\n                    />\r\n                    <input\r\n                        name=\"password\"\r\n                        placeholder=\"Enter new password...\"\r\n                        type=\"password\"\r\n                        onChange={this.onChange}\r\n                    />\r\n                    <br />\r\n                    <input type=\"submit\" value=\"Register\"/>\r\n                </form>\r\n                <p align=\"center\">\r\n                    Masukkan username dan password baru Anda<br />\r\n                    Sudah punya akun? <a href=\"/nim-finder/#/login\" className=\"App-link\">Login di sini</a>\r\n                </p>\r\n            </header>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Register;","export function GetData(queryURL, authToken){\r\n    //Remove quotes from \"'aaa'\" to \"aaa\"\r\n    var newToken = authToken.slice(1, authToken.length-1);\r\n\r\n    //Fetch API\r\n    return new Promise((resolve, reject) =>{\r\n        fetch(queryURL, {\r\n            method: 'GET',\r\n            headers: new Headers({\r\n                'Auth-Token' : newToken\r\n            })\r\n        })\r\n        .then((response) => response.json())\r\n        .then((responseJson) => {\r\n            resolve(responseJson);\r\n        })\r\n        .catch((error) => {\r\n            reject(error);\r\n        });\r\n      });\r\n}","import React, {Component} from 'react';\r\n\r\nclass Table extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.generateTableHead = this.generateTableHead.bind(this);\r\n        this.generateTable = this.generateTable.bind(this);\r\n        this.tableCreate = this.tableCreate.bind(this);\r\n    }\r\n\r\n    //Generate Table\r\n    generateTableHead(table) {\r\n        let thead = table.createTHead();\r\n        let row = thead.insertRow();\r\n        let key = [\"Nama\",\"NIM TPB\",\"NIM Jurusan\",\"Program Studi\"]\r\n        for (let i = 0;i<4;i++) {\r\n            let th = document.createElement(\"th\");\r\n            let text = document.createTextNode(key[i]);\r\n            th.appendChild(text);\r\n            row.appendChild(th);\r\n        }\r\n    }\r\n\r\n    generateTable(table, cols) {\r\n        for (let element of cols) {\r\n            let row = table.insertRow();\r\n            for (let key in element) {\r\n                let cell = row.insertCell();\r\n                let text = document.createTextNode(element[key]);\r\n                cell.appendChild(text);\r\n            }\r\n        }\r\n    }\r\n\r\n    tableCreate(){\r\n        let table = document.querySelector(\"table\");\r\n        let cols = Object.keys(this.props.data[0]);\r\n        this.generateTable(table, this.props.data); // generate the table first\r\n        this.generateTableHead(table); // then the head\r\n    }\r\n\r\n    render(){\r\n        if(this.props.data.length !== 0){\r\n            this.tableCreate(this.props.data);\r\n        }\r\n        return(\r\n            <table id=\"tableID\">\r\n\r\n            </table>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Table;","import React, { Component } from 'react';\r\nimport './Home.css';\r\nimport {Redirect} from 'react-router-dom'\r\nimport { GetData } from '../../services/GetData';\r\nimport Table from './Table';\r\n\r\nclass Home extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            query: '',\r\n            JSONData: [],\r\n            currQuery: '',\r\n            pageNum: 0,\r\n            redirectToReferrer: false\r\n        }\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSearch = this.onSearch.bind(this);\r\n        this.logout = this.logout.bind(this);\r\n        this.clearTable = this.clearTable.bind(this);\r\n        this.nextPage = this.nextPage.bind(this);\r\n    }\r\n\r\n    // Lifecycle\r\n    componentWillMount(){\r\n        if(!(sessionStorage.getItem(\"authToken\"))){\r\n            this.setState({redirectToReferrer: true});\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.toggleHide();\r\n    }\r\n\r\n    //Set value of query\r\n    onChange = (event) =>{\r\n        event.preventDefault();\r\n        this.setState({\r\n            [event.target.name] : event.target.value\r\n        })\r\n        this.clearTable();\r\n        console.log(this.state);\r\n    }\r\n\r\n    clearTable(){\r\n        var parent = document.getElementById(\"tableID\");\r\n        while(parent.hasChildNodes()){\r\n            parent.removeChild(parent.firstChild);\r\n        }\r\n    }\r\n\r\n    onSearch = event => {\r\n        event.preventDefault();\r\n    \r\n        const query = this.state.query;\r\n        var queryURL = 'https://api.stya.net/nim/';\r\n        this.setState({\r\n            pageNum: 0\r\n        })\r\n\r\n        //Clear search results (table or \"not found\")\r\n        this.toggleHide();\r\n        this.clearTable();\r\n        document.getElementById(\"notfound\").innerHTML = \"\";\r\n\r\n        if (query === '') {\r\n            return;\r\n        }\r\n    \r\n        //Recognize the query, Name/Number\r\n        var ord = query.charCodeAt(0) - \"0\".charCodeAt(0);\r\n        if((ord >= 0) && (ord <= 9)){\r\n            queryURL = queryURL + 'byid?query=';\r\n        } else{\r\n            queryURL = queryURL + 'byname?name=';\r\n        }\r\n\r\n        //Create URL for query\r\n        queryURL = queryURL + query + '&count=10'; \r\n        const token = sessionStorage.getItem(\"authToken\");\r\n        GetData(queryURL, token).then((result) =>{\r\n            var responseJson = result;\r\n            if(responseJson.status !== \"OK\"){\r\n                alert(\"Something wrong!\");\r\n                let myString = JSON.stringify(result);\r\n                alert(myString);\r\n                this.setState({\r\n                    redirectToReferrer: true\r\n                });\r\n            } else{\r\n                let payload = responseJson.payload;\r\n                var data = [];\r\n                for (var i=0;i<payload.length;i++) {\r\n                    data.push(JSON.parse(JSON.stringify(payload[i])));\r\n                }\r\n                //Check the data of payload\r\n                if(data.length === 0){\r\n                    this.clearTable();\r\n                    console.log(\"HAHA\");\r\n                    document.getElementById(\"notfound\").innerHTML = \"Tidak ada hasil yang ditemukan!\";\r\n                    this.setState({\r\n                        JSONData : []\r\n                    })\r\n                } else{\r\n                    this.clearTable();\r\n                    let temp = queryURL + '&page=' + this.state.pageNum.toString()\r\n                    this.setState({\r\n                        JSONData : data,\r\n                        currQuery : temp.slice(0,temp.length-1)\r\n                    })\r\n                    if(data.length === 10){\r\n                        this.toggleShow();\r\n                    } else{\r\n                        this.toggleHide();\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    };\r\n\r\n    toggleHide(){\r\n        var x = document.getElementById(\"nextButton\");\r\n        x.style.display = \"none\";\r\n    }\r\n\r\n    toggleShow(){\r\n        var x = document.getElementById(\"nextButton\");\r\n        x.style.display = \"block\";\r\n    }\r\n\r\n    nextPage = event =>{\r\n        event.preventDefault();\r\n\r\n        this.setState({\r\n            pageNum: this.state.pageNum + 1\r\n        })\r\n        this.clearTable();\r\n\r\n        var queryURL = this.state.currQuery + this.state.pageNum.toString();\r\n        const token = sessionStorage.getItem(\"authToken\");\r\n        GetData(queryURL, token).then((result) =>{\r\n            var responseJson = result;\r\n            if(responseJson.status !== \"OK\"){\r\n                alert(\"Something wrong!\");\r\n            } else{\r\n                let payload = responseJson.payload;\r\n                var data = [];\r\n                for (var i=0;i<payload.length;i++) {\r\n                    data.push(JSON.parse(JSON.stringify(payload[i])));\r\n                }\r\n                //Check the data of payload\r\n                if(data.length === 0){\r\n                    this.clearTable();\r\n                    document.getElementById(\"notfound\").innerHTML = \"Tidak ada hasil yang ditemukan!\";\r\n                    this.setState({\r\n                        JSONData : []\r\n                    });\r\n                    this.toggleHide();\r\n                } else{\r\n                    this.clearTable();\r\n                    this.setState({\r\n                        JSONData : data\r\n                    })\r\n                    if(data.length === 10){\r\n                        this.toggleShow();\r\n                    } else{\r\n                        this.clearTable();\r\n                        this.setState({\r\n                            pageNum : 0\r\n                        })\r\n                        this.toggleHide();\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    logout(){\r\n        sessionStorage.setItem(\"authToken\",'');\r\n        sessionStorage.clear();\r\n        this.setState({redirectToReferrer: true});\r\n    }\r\n\r\n    render(){\r\n        if (this.state.redirectToReferrer) {\r\n            return (<Redirect to={'/login'}/>);\r\n        }\r\n        \r\n        return (\r\n        <div className=\"Home\" background-color=\"#282c34\">\r\n            <header className=\"Home-header\">\r\n                <h2 align=\"center\">ITB NIM Finder</h2>\r\n            </header>\r\n            <body id=\"bodypart\" className=\"Home-body\">\r\n                <form className=\"Search\" onSubmit = {this.onSearch}>\r\n                    <input \r\n                        name=\"query\"\r\n                        placeholder=\"Masukkan Nama/NIM\"\r\n                        type=\"text\"\r\n                        onChange={this.onChange}\r\n                    />\r\n                    <button type=\"submit\">Search</button>\r\n                </form>\r\n                <p id=\"notfound\">\r\n\r\n                </p>\r\n                \r\n                <button id=\"nextButton\" onClick={this.nextPage}>NEXT</button>\r\n                <br />\r\n                <Table id=\"tableID\" data={this.state.JSONData}/>\r\n                <br />\r\n            </body>\r\n            <footer className=\"Home-footer\">\r\n                    Masukkan Nama atau NIM. Salah satu saja<br />\r\n                    Contoh \"Hendry\", \"13517105\"<br />\r\n                    <button onClick = {this.logout}>Logout</button>\r\n            </footer>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;","import React, {Component} from 'react';\r\n\r\nimport './NotFound.css';\r\n\r\nclass NotFound extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <header>\r\n                    <h1>404 Page Not Found</h1>\r\n                </header>\r\n                <footer>\r\n                    <h3>ITB NIM Finder - Hendpraz</h3>\r\n                </footer>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NotFound;","import React from 'react';\r\nimport {HashRouter as Router, Route,  Switch} from 'react-router-dom';\r\n\r\nimport Welcome from '././components/Welcome/Welcome';\r\nimport Login from '././components/Login/Login';\r\nimport Register from '././components/Register/Register';\r\nimport Home from '././components/Home/Home';\r\nimport NotFound from '././components/NotFound/NotFound';\r\n\r\nconst Routes = () => (\r\n  <Router>\r\n      <Switch>\r\n          <Route path=\"/login\" component={Login}/>\r\n          <Route path=\"/register\" component={Register}/>\r\n          <Route path=\"/home\" component={Home}/>\r\n          <Route path=\"/\" component={Welcome}/>\r\n          <Route path=\"*\" component={NotFound}/>\r\n      </Switch>\r\n  </Router>\r\n);\r\n\r\nexport default Routes;","import React, { Component } from 'react';\nimport './App.css';\nimport Routes from './routes'\n\nclass App extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            appName: \"ITB NIM Finder\",\n            home: false\n        }\n\n    }\n\n    render(){\n        return (\n        <div className=\"App\">\n            <Routes name ={this.state.appName}/>\n        </div>\n        );\n    }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {HashRouter as Router} from 'react-router-dom';\n\nReactDOM.render(\n    <Router>\n        <App />\n    </Router>\n    , \n    document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}